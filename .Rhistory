knitr::opts_chunk$set(echo = TRUE)
# https://cran.r-project.org/web/packages/dplyr/index.html
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
str(wines)
#rows=dim(wines)[1]
#str(wines)
rows=dim(wines)[1]
# https://cran.r-project.org/web/packages/ggplot2/index.html
if (!require('ggplot2')) install.packages('ggplot2'); library('ggplot2')
# https://cran.r-project.org/web/packages/dplyr/index.html
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
# https://cran.r-project.org/web/packages/ggplot2/index.html
if (!require('ggplot2')) install.packages('ggplot2'); library('ggplot2')
# https://cran.r-project.org/web/packages/dplyr/index.html
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
#rows=dim(wines)[1]
#str(wines)
#rows=dim(wines)[1]
#str(wines)
# Integración y selección de los datos de interés a analizar
# Limpieza de los datos
# Análisis de los datos
# Representación de los datos
#rows=dim(wines)[1]
#str(wines)
#str(wines)
wines <- read.csv('winequality-red.csv',stringsAsFactors = FALSE)
rows=dim(wines)[1]
str(wines)
str(wines)
rows=dim(wines)[1]
# Pasos previos a la resolución del problema
Instalamos y cargamos las librerías necesarias
```{r echo=TRUE, message=FALSE, warning=FALSE}
# https://cran.r-project.org/web/packages/ggplot2/index.html
if (!require('ggplot2')) install.packages('ggplot2'); library('ggplot2')
# https://cran.r-project.org/web/packages/dplyr/index.html
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
```
Cargamos el fichero de datos
```{r}
wines <- read.csv('winequality-red.csv',stringsAsFactors = FALSE)
rows=dim(wines)[1]
```
# Integración y selección de los datos de interés a analizar
```{r}
str(wines)
```
Vemo que tenemos 1599 registros y 12 variables que los caracterizan.
```{r echo=TRUE, message=FALSE, warning=FALSE}
summary(totalData)
```
# Limpieza de los datos
summary(wines)
colSums(is.na(totalData))
colSums(wines=="")
totalData["segmento_calidad"] <- cut(wines$quality, breaks = c(0,5,7,9,10), labels = c("Insufficient", "OK", "Good", "Excellent"))
wines["segmento_calidad"] <- cut(wines$quality, breaks = c(0,5,7,9,10), labels = c("Insufficient", "OK", "Good", "Excellent"))
head(wines)
plot(wine$quality,main="Número de pasajeros por grupos de edad",xlab="Edad", ylab="Cantidad",col = "ivory")
plot(wines$quality,main="Número de pasajeros por grupos de edad",xlab="Edad", ylab="Cantidad",col = "ivory")
barplot(table(wines$quality))
# Pasos previos a la resolución del problema
Instalamos y cargamos las librerías necesarias
```{r echo=TRUE, message=FALSE, warning=FALSE}
if (!require('ggplot2')) install.packages('ggplot2'); library('ggplot2')
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
if (!require('corrplot')) install.packages('dplyr'); library('corrplot')
```
Cargamos el fichero de datos
```{r}
wines <- read.csv('winequality-red.csv',stringsAsFactors = FALSE)
rows=dim(wines)[1]
```
# Integración y selección de los datos de interés a analizar
```{r}
str(wines)
```
Vemo que tenemos 1599 registros y 12 variables que los caracterizan.
```{r echo=TRUE, message=FALSE, warning=FALSE}
summary(wines)
```
Estas son las estadísticas básicas. Veamos ahora las distribuciones:
```{r message= FALSE, warning=FALSE}
par(mfrow=c(2,2))
barplot(table(wines$fixed.acidity))
barplot(table(wines$volatile.acidity))
barplot(table(wines$citric.acid))
barplot(table(wines$residual.sugar))
barplot(table(wines$chlorides))
barplot(table(wines$free.sulfur.dioxide))
barplot(table(wines$total.sulfur.dioxide))
barplot(table(wines$density))
barplot(table(wines$pH))
barplot(table(wines$sulphates))
barplot(table(wines$alcohol))
barplot(table(wines$quality))
```
Nos proponemos analizar las relaciones entre las diferentes variables del juego de datos para ver si se relacionan y como. Visualizamos la relación entre las variables "gender" y "survived":
```{r echo=TRUE, message=FALSE, warning=FALSE}
ggplot(data=totalData[1:filas,],aes(x=gender,fill=survived))+geom_bar()+ggtitle("Relación entre las variables gender y survived")
```
# Limpieza de los datos
Estadísticas de valores vacíos.
```{r}
colSums(is.na(wines))
colSums(wines=="")
```
```{r message= FALSE, warning=FALSE}
datos[is.na(datos), ]
sum(datos == "")
sum(datos == 0)
sum(datos$citric.acid == 0)
```
Como hemos podido ver, los datos parecen ser de buena calidad.
# Análisis de los datos
Discretizamos la variable de calidad
```{r}
wines["segmento_calidad"] <- cut(wines$quality, breaks = c(0,5,7,9,10), labels = c("Insufficient", "OK", "Good", "Excellent"))
head(wines)
```
Vemos cómo se agrupan los vinos por segmento de calidad
```{r}
plot(wines$quality,main="Número de vinos por segmento de calidad",xlab="Calidad", ylab="Cantidad",col = "ivory")
```
NOTA: DISCRETIZAMOS POR KMEANS??
# Representación de los datos
datos[is.na(datos), ]
sum(wines$citric.acid == 0)
wines[is.na(wines), ]
colSums(wines$citric.acid == 0)
sum(wines$citric.acid == 0)
# sum(wines$citric.acid == 0)
colSums(wines == 0)
# Pasos previos a la resolución del problema
Instalamos y cargamos las librerías necesarias
```{r echo=TRUE, message=FALSE, warning=FALSE}
if (!require('ggplot2')) install.packages('ggplot2'); library('ggplot2')
if (!require('dplyr')) install.packages('dplyr'); library('dplyr')
if (!require('corrplot')) install.packages('dplyr'); library('corrplot')
```
Cargamos el fichero de datos
```{r}
wines <- read.csv('winequality-red.csv',stringsAsFactors = FALSE)
rows=dim(wines)[1]
```
# Integración y selección de los datos de interés a analizar
```{r}
str(wines)
```
Vemo que tenemos 1599 registros y 12 variables que los caracterizan.
```{r echo=TRUE, message=FALSE, warning=FALSE}
summary(wines)
```
Estas son las estadísticas básicas. Veamos ahora las distribuciones:
```{r message= FALSE, warning=FALSE}
par(mfrow=c(2,2))
barplot(table(wines$fixed.acidity))
barplot(table(wines$volatile.acidity))
barplot(table(wines$citric.acid))
barplot(table(wines$residual.sugar))
barplot(table(wines$chlorides))
barplot(table(wines$free.sulfur.dioxide))
barplot(table(wines$total.sulfur.dioxide))
barplot(table(wines$density))
barplot(table(wines$pH))
barplot(table(wines$sulphates))
barplot(table(wines$alcohol))
barplot(table(wines$quality))
```
Nos proponemos analizar las relaciones entre las diferentes variables del juego de datos para ver si se relacionan y como. Visualizamos la relación entre las variables "gender" y "survived":
```{r echo=TRUE, message=FALSE, warning=FALSE}
ggplot(data=totalData[1:filas,],aes(x=gender,fill=survived))+geom_bar()+ggtitle("Relación entre las variables gender y survived")
```
# Limpieza de los datos
## Valores vacíos
```{r}
colSums(is.na(wines))
colSums(wines=="")
colSums(wines == 0)
# sum(wines$citric.acid == 0)
```
## Valores extremos
```{r message= FALSE, warning=FALSE}
par(mfrow=c(2,2))
boxplot(datos$fixed.acidity)
boxplot(datos$volatile.acidity)
boxplot(datos$citric.acid)
boxplot(datos$residual.sugar)
boxplot(datos$chlorides)
boxplot(datos$free.sulfur.dioxide)
boxplot(datos$total.sulfur.dioxide)
boxplot(datos$density)
boxplot(datos$pH)
boxplot(datos$sulphates)
boxplot(datos$alcohol)
boxplot(datos$quality)
```
# Análisis de los datos
Discretizamos la variable de calidad
```{r}
wines["segmento_calidad"] <- cut(wines$quality, breaks = c(0,5,7,9,10), labels = c("Insufficient", "OK", "Good", "Excellent"))
head(wines)
```
Vemos cómo se agrupan los vinos por segmento de calidad
```{r}
plot(wines$quality,main="Número de vinos por segmento de calidad",xlab="Calidad", ylab="Cantidad",col = "ivory")
```
NOTA: DISCRETIZAMOS POR KMEANS??
# Representación de los datos
boxplot(datos$pH)
boxplot(wines$alcohol)
